version: 2
jobs:
  build-lambda:
    working_directory: /tmp/project/
    docker:
      - image: benjaminvaliente/cicdtools:latest
    steps:
      - checkout
      - run:
          name: build lambda
          command: |
            echo "Getting started with AWS Lambda build..."
            echo "Cloning repository..."            
            cd ./.build/
            git clone https://$VAR_GITHUB_TOKEN:x-oauth-basic@github.com/levelgoals/argyle-webhooks-authorizer.git
            cd argyle-webhooks-authorizer/
            ls -lah && pwd
            echo "Building Lambda function..."
            npm ci
            npm run build
            sam build
      - persist_to_workspace:
          root: .
          paths:
            - .
  unit-test:
    docker:
      - image: benjaminvaliente/cicdtools:latest
    steps:
      - attach_workspace:
          at: .
      - run:
          name: unit-test
          command: |        
            sleep 10
            echo "This will run an unit test..."
      - persist_to_workspace:
          root: .
          paths:
            - .
  deploy-infra-dev:    
    working_directory: /tmp/project/
    docker:
      - image: benjaminvaliente/cicdtools:latest
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform deployment
          command: |            
            echo "Setting up environment..."
            TFVAR_environment='env-dev'
            echo "Setting up AWS credentials..."    
            AWS_PAGER=''
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID_PROD
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY_PROD
            aws configure set default.region $AWS_DEFAULT_REGION
            aws sts get-caller-identity --no-cli-pager
            aws s3 ls --no-cli-pager
            echo "Starting terraform init..."
            cd ./terraform-code/$TFVAR_environment
            terraform init
            echo "Starting terraform plan..."
            terraform plan -out tfapply -var="environment=$TFVAR_environment"
            echo "Starting terraform apply..."
            terraform apply -auto-approve tfapply -var="environment=$TFVAR_environment"
      - persist_to_workspace:
          root: .
          paths:
            - .
  deploy-lambda-dev:
    working_directory: /tmp/project/
    docker:
      - image: benjaminvaliente/cicdtools:latest
    steps:
      - run:
          name: build lambda
          command: |
            echo "Getting started with AWS Lambda deploy..."
            echo "Cloning repository..."
            cd ./.build/argyle-webhooks-authorizer/
            echo "Deploying Lambda function..."
            echo "Doing SAM deploy..."
workflows:
  version: 2
  deploy-infrastructure:
    jobs:
      - build-lambda
      - unit-test:
          requires:
            - build-lambda
      - deploy-infra-dev:      
          requires:
            - unit-test
      - deploy-lambda-dev:
          requires:
            - deploy-infra-dev