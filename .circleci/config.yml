version: 2
jobs:
  build:
    working_directory: /tmp/project/
    docker:
      - image: ubuntu:20.04
    steps:
      - checkout
      - run:
          name: build lambda
          command: |
            echo "Getting started with AWS Lambda deployment..."
            echo "Installing dependencies..."
            apt update -y && apt install -y zip
            echo "Zipping deployment package..."
            cd ./.build/
            zip lambda_artifact.zip lambda_function.py
            cp lambda_artifact.zip ../terraform-code/
      - persist_to_workspace:
          root: .
          paths:
            - .
  deploy:
    working_directory: /tmp/project/
    docker:
      - image: ubuntu:20.04
    steps:
      - attach_workspace:
          at: .
      - run:
          name: deploy
          command: |        
            echo "Updating Lambda function..."
            echo "Installing dependencies..."
            apt update -y
            apt install -y curl unzip wget tar gzip less
            echo "Configuring AWS CLI..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -qq awscliv2.zip
            ./aws/install
            aws --version
            echo "Setting up AWS credentials..."        
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region $AWS_DEFAULT_REGION
            rm -rf awscliv2.zip terraform_1.1.8_linux_amd64.zip aws
            aws s3 ls
            echo "Deploying Lambda artifact..."
            cd ./terraform-code/
            ls -la && pwd
            aws lambda update-function-code --function-name $var_lambda_function_name --zip-file fileb://lambda_artifact.zip
            echo "Lambda updated successfully!"
workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - build
      - deploy:
          requires:
            - build