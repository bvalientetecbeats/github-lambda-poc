version: 2
jobs:
  build:
    working_directory: /tmp/project/
    docker:
      - image: ubuntu:20.04
    steps:
      - checkout
      - run:
          name: build lambda
          command: |
            echo "Getting started with AWS Lambda deployment..."
            echo "Installing dependencies..."
            apt update -y && apt install -y zip > /dev/null 2>&1
            echo "Zipping deployment package..."
            cd ./.build/
            zip lambda_artifact.zip lambda_function.py
            cd ..
            ls -la && pwd
            cp lambda_artifact.zip ../terraform-code/
      - persist_to_workspace:
          root: .
          paths:
            - .
  plan-apply:    
    working_directory: /tmp/project/
    docker:
      - image: ubuntu:20.04
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform init & plan
          command: |
            echo "Starting Terraform init and plan..."
            echo "Installing dependencies..."
            apt update -y 
            apt install -y curl unzip wget > /dev/null 2>&1
            wget https://releases.hashicorp.com/terraform/1.1.8/terraform_1.1.8_linux_amd64.zip
            unzip -qq terraform_1.1.8_linux_amd64.zip && mv terraform /usr/local/bin/
            rm -rf terraform_1.1.8_linux_amd64.zip terraform
            echo "Getting artifact..."
            cd ./terraform-code/
            echo "Starting terraform init..."
            terraform --version
            terraform init -backend-config="access_key=$AWS_ACCESS_KEY_ID" -backend-config="secret_key=$AWS_SECRET_ACCESS_KEY"
            echo "Starting terraform plan..."
            terraform plan -out tfapply -var-file variables.tf
      - persist_to_workspace:
          root: .
          paths:
            - .
  approve-apply:
    docker:
      - image: ubuntu:20.04
    steps:
      - attach_workspace:
          at: .
      - run:
          name: approve-apply
          command: |        
            echo "Waiting for approval..."
      - persist_to_workspace:
          root: .
          paths:
            - .
  apply:
    working_directory: /tmp/project/
    docker:
      - image: ubuntu:20.04
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform apply
          command: |            
            echo "Deploying terraform changes..."
            ls -la && pwd
            echo "Installing dependencies..."
            apt update -y 
            apt install -y curl unzip wget > /dev/null 2>&1
            wget https://releases.hashicorp.com/terraform/1.1.8/terraform_1.1.8_linux_amd64.zip
            unzip -qq terraform_1.1.8_linux_amd64.zip && mv terraform /usr/local/bin/
            rm -rf terraform_1.1.8_linux_amd64.zip terraform
            echo "Getting artifact..."
            cd ./terraform-code/
            echo "Starting terraform apply..."
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
      - approve-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - approve-apply