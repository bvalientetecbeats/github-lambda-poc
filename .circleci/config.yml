version: '2.1'

orbs:
  aws-cli: circleci/aws-cli@3.1
  node: circleci/node@5.0.2
 
jobs:

  #Build React app
  build-app:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - node/install:
          node-version: '16.15'
      - run:
            name: Node version
            command: node --version
      - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "npm-shrinkwrap.json" }}
              #Fallback on empty cache
              - v1-dependencies-
      - run:
            name: Npm install
            command: npm ci
      - run:
            name: Npm build
            command: npm run build
      - save_cache:
          key: v1-dependencies-{{ checksum "npm-shrinkwrap.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - '*'

  #Unit Test React app
  unit-test:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - attach_workspace:
          at: .
      - node/install:
          node-version: '16.15'
      - run:
            name: Node version
            command: node --version
      - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "npm-shrinkwrap.json" }}
              #Fallback on empty cache
              - v1-dependencies-
      - run:
            name: Run test
            #command: npm run test
            command: echo "Runing tests..."
      - persist_to_workspace:
          root: .
          paths:
            - '*'

  #Save artifact to S3 bucket
  save-artifact:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: .
      - aws-cli/setup:
          profile-name: default
      - run: 
            name: Save artifact to S3
            command: |
              set -e
              cd ./build && zip -r ../artifact.zip .
              #aws s3 cp ../artifact.zip s3://$S3_BUCKET/$CIRCLE_PROJECT_REPONAME/
      - store_artifacts:
          path: ./artifact.zip
          destination: artifact.zip


  #Provision AWS Amplify FrontEnd Infrastructure
  provision-amplify:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
      - run:
            name: Provision Amplify FrontEnd Infrastructure
            command: aws amplify create-app --name $ENV_NAME --platform 'WEB'
      - run:
            name: Create Amplify Branch
            command: |
              set -e
              APPID=$(aws amplify list-apps | jq ".apps[] | select(.name ==\"$ENV_NAME\") | .appId" | sed 's/\"//g')
              echo $APPID
              aws amplify create-branch --app-id $APPID --branch-name $CIRCLE_BRANCH

  #Deploy react app to amplify
  deploy-amplify:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
      - run:
            name: Deploy React App
            command: |
              set -e
              APPID=$(aws amplify list-apps | jq ".apps[] | select(.name ==\"$ENV_NAME\") | .appId" | sed 's/\"//g')
              echo $APPID
              aws s3 ls s3://$S3_BUCKET/$CIRCLE_PROJECT_REPONAME/
              aws amplify start-deployment --app-id $APPID --branch-name $CIRCLE_BRANCH --source-url s3://$S3_BUCKET/$CIRCLE_PROJECT_REPONAME/artifact.zip

workflows:
  amplify-app:
    jobs:
      - build-app:
          context: 
            - amplify-dev
            - aws-credentials-context-dev
      - unit-test:
          context: 
            - amplify-dev
            - aws-credentials-context-dev
          requires:
            - build-app
      - save-artifact:
          requires:
            - unit-test
          context: 
            - amplify-dev
            - aws-credentials-context-dev
      - provision-amplify:
          name: provision-amplify-dev
          requires:
            - save-artifact
          context: 
            - amplify-dev
            - aws-credentials-context-dev
      - deploy-amplify:
          name: deploy-amplify-dev
          requires:
              - provision-amplify-dev
          context: 
            - amplify-dev
            - aws-credentials-context-dev
      - provision-amplify:
          name: provision-amplify-qa
          requires:
            - deploy-amplify-dev
          context: 
            - amplify-dev
            - aws-credentials-context-dev
      - deploy-amplify:
          name: deploy-amplify-qa
          requires:
              - provision-amplify-qa
          context: 
            - amplify-dev
            - aws-credentials-context-dev
      - approve-deploy-prod:
          type: approval
          requires:
              - deploy-amplify-qa
      - provision-amplify:
          name: provision-amplify-prod
          requires:
            - approve-deploy-prod
          context: 
            - amplify-dev
            - aws-credentials-context-dev
      - deploy-amplify:
          name: deploy-amplify-prod
          requires:
              - provision-amplify-prod
          context: 
            - amplify-dev
            - aws-credentials-context-dev